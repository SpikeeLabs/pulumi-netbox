// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netbox

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/hbjydev/pulumi-netbox/sdk/go/netbox"
//	"github.com/pulumi/pulumi-netbox/sdk/go/netbox"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := netbox.LookupVlan(ctx, &GetVlanArgs{
//				Name: pulumi.StringRef("vlan-1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = netbox.LookupVlan(ctx, &GetVlanArgs{
//				Vid: pulumi.IntRef(1234),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVlan(ctx *pulumi.Context, args *LookupVlanArgs, opts ...pulumi.InvokeOption) (*LookupVlanResult, error) {
	var rv LookupVlanResult
	err := ctx.Invoke("netbox:index/getVlan:getVlan", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVlan.
type LookupVlanArgs struct {
	Name *string `pulumi:"name"`
	Vid  *int    `pulumi:"vid"`
}

// A collection of values returned by getVlan.
type LookupVlanResult struct {
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id     string  `pulumi:"id"`
	Name   *string `pulumi:"name"`
	Role   int     `pulumi:"role"`
	Site   int     `pulumi:"site"`
	Status string  `pulumi:"status"`
	Tenant int     `pulumi:"tenant"`
	Vid    *int    `pulumi:"vid"`
}

func LookupVlanOutput(ctx *pulumi.Context, args LookupVlanOutputArgs, opts ...pulumi.InvokeOption) LookupVlanResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVlanResult, error) {
			args := v.(LookupVlanArgs)
			r, err := LookupVlan(ctx, &args, opts...)
			var s LookupVlanResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVlanResultOutput)
}

// A collection of arguments for invoking getVlan.
type LookupVlanOutputArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
	Vid  pulumi.IntPtrInput    `pulumi:"vid"`
}

func (LookupVlanOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVlanArgs)(nil)).Elem()
}

// A collection of values returned by getVlan.
type LookupVlanResultOutput struct{ *pulumi.OutputState }

func (LookupVlanResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVlanResult)(nil)).Elem()
}

func (o LookupVlanResultOutput) ToLookupVlanResultOutput() LookupVlanResultOutput {
	return o
}

func (o LookupVlanResultOutput) ToLookupVlanResultOutputWithContext(ctx context.Context) LookupVlanResultOutput {
	return o
}

func (o LookupVlanResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVlanResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVlanResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVlanResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVlanResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVlanResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupVlanResultOutput) Role() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVlanResult) int { return v.Role }).(pulumi.IntOutput)
}

func (o LookupVlanResultOutput) Site() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVlanResult) int { return v.Site }).(pulumi.IntOutput)
}

func (o LookupVlanResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVlanResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupVlanResultOutput) Tenant() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVlanResult) int { return v.Tenant }).(pulumi.IntOutput)
}

func (o LookupVlanResultOutput) Vid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupVlanResult) *int { return v.Vid }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVlanResultOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netbox

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupPrefix(ctx *pulumi.Context, args *LookupPrefixArgs, opts ...pulumi.InvokeOption) (*LookupPrefixResult, error) {
	var rv LookupPrefixResult
	err := ctx.Invoke("netbox:index/getPrefix:getPrefix", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPrefix.
type LookupPrefixArgs struct {
	Cidr string `pulumi:"cidr"`
}

// A collection of values returned by getPrefix.
type LookupPrefixResult struct {
	Cidr string `pulumi:"cidr"`
	// The ID of this resource.
	Id int `pulumi:"id"`
}

func LookupPrefixOutput(ctx *pulumi.Context, args LookupPrefixOutputArgs, opts ...pulumi.InvokeOption) LookupPrefixResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPrefixResult, error) {
			args := v.(LookupPrefixArgs)
			r, err := LookupPrefix(ctx, &args, opts...)
			var s LookupPrefixResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPrefixResultOutput)
}

// A collection of arguments for invoking getPrefix.
type LookupPrefixOutputArgs struct {
	Cidr pulumi.StringInput `pulumi:"cidr"`
}

func (LookupPrefixOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrefixArgs)(nil)).Elem()
}

// A collection of values returned by getPrefix.
type LookupPrefixResultOutput struct{ *pulumi.OutputState }

func (LookupPrefixResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrefixResult)(nil)).Elem()
}

func (o LookupPrefixResultOutput) ToLookupPrefixResultOutput() LookupPrefixResultOutput {
	return o
}

func (o LookupPrefixResultOutput) ToLookupPrefixResultOutputWithContext(ctx context.Context) LookupPrefixResultOutput {
	return o
}

func (o LookupPrefixResultOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrefixResult) string { return v.Cidr }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupPrefixResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPrefixResult) int { return v.Id }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPrefixResultOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netbox

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetInterfacesFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetInterfacesFilterInput is an input type that accepts GetInterfacesFilterArgs and GetInterfacesFilterOutput values.
// You can construct a concrete instance of `GetInterfacesFilterInput` via:
//
//	GetInterfacesFilterArgs{...}
type GetInterfacesFilterInput interface {
	pulumi.Input

	ToGetInterfacesFilterOutput() GetInterfacesFilterOutput
	ToGetInterfacesFilterOutputWithContext(context.Context) GetInterfacesFilterOutput
}

type GetInterfacesFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetInterfacesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfacesFilter)(nil)).Elem()
}

func (i GetInterfacesFilterArgs) ToGetInterfacesFilterOutput() GetInterfacesFilterOutput {
	return i.ToGetInterfacesFilterOutputWithContext(context.Background())
}

func (i GetInterfacesFilterArgs) ToGetInterfacesFilterOutputWithContext(ctx context.Context) GetInterfacesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfacesFilterOutput)
}

// GetInterfacesFilterArrayInput is an input type that accepts GetInterfacesFilterArray and GetInterfacesFilterArrayOutput values.
// You can construct a concrete instance of `GetInterfacesFilterArrayInput` via:
//
//	GetInterfacesFilterArray{ GetInterfacesFilterArgs{...} }
type GetInterfacesFilterArrayInput interface {
	pulumi.Input

	ToGetInterfacesFilterArrayOutput() GetInterfacesFilterArrayOutput
	ToGetInterfacesFilterArrayOutputWithContext(context.Context) GetInterfacesFilterArrayOutput
}

type GetInterfacesFilterArray []GetInterfacesFilterInput

func (GetInterfacesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfacesFilter)(nil)).Elem()
}

func (i GetInterfacesFilterArray) ToGetInterfacesFilterArrayOutput() GetInterfacesFilterArrayOutput {
	return i.ToGetInterfacesFilterArrayOutputWithContext(context.Background())
}

func (i GetInterfacesFilterArray) ToGetInterfacesFilterArrayOutputWithContext(ctx context.Context) GetInterfacesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfacesFilterArrayOutput)
}

type GetInterfacesFilterOutput struct{ *pulumi.OutputState }

func (GetInterfacesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfacesFilter)(nil)).Elem()
}

func (o GetInterfacesFilterOutput) ToGetInterfacesFilterOutput() GetInterfacesFilterOutput {
	return o
}

func (o GetInterfacesFilterOutput) ToGetInterfacesFilterOutputWithContext(ctx context.Context) GetInterfacesFilterOutput {
	return o
}

func (o GetInterfacesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfacesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInterfacesFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfacesFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetInterfacesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInterfacesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfacesFilter)(nil)).Elem()
}

func (o GetInterfacesFilterArrayOutput) ToGetInterfacesFilterArrayOutput() GetInterfacesFilterArrayOutput {
	return o
}

func (o GetInterfacesFilterArrayOutput) ToGetInterfacesFilterArrayOutputWithContext(ctx context.Context) GetInterfacesFilterArrayOutput {
	return o
}

func (o GetInterfacesFilterArrayOutput) Index(i pulumi.IntInput) GetInterfacesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfacesFilter {
		return vs[0].([]GetInterfacesFilter)[vs[1].(int)]
	}).(GetInterfacesFilterOutput)
}

type GetInterfacesInterface struct {
	Description   string                               `pulumi:"description"`
	Enabled       bool                                 `pulumi:"enabled"`
	MacAddress    string                               `pulumi:"macAddress"`
	Mode          map[string]string                    `pulumi:"mode"`
	Mtu           int                                  `pulumi:"mtu"`
	Name          string                               `pulumi:"name"`
	TagIds        []int                                `pulumi:"tagIds"`
	TaggedVlans   []GetInterfacesInterfaceTaggedVlan   `pulumi:"taggedVlans"`
	UntaggedVlans []GetInterfacesInterfaceUntaggedVlan `pulumi:"untaggedVlans"`
	VmId          int                                  `pulumi:"vmId"`
}

// GetInterfacesInterfaceInput is an input type that accepts GetInterfacesInterfaceArgs and GetInterfacesInterfaceOutput values.
// You can construct a concrete instance of `GetInterfacesInterfaceInput` via:
//
//	GetInterfacesInterfaceArgs{...}
type GetInterfacesInterfaceInput interface {
	pulumi.Input

	ToGetInterfacesInterfaceOutput() GetInterfacesInterfaceOutput
	ToGetInterfacesInterfaceOutputWithContext(context.Context) GetInterfacesInterfaceOutput
}

type GetInterfacesInterfaceArgs struct {
	Description   pulumi.StringInput                           `pulumi:"description"`
	Enabled       pulumi.BoolInput                             `pulumi:"enabled"`
	MacAddress    pulumi.StringInput                           `pulumi:"macAddress"`
	Mode          pulumi.StringMapInput                        `pulumi:"mode"`
	Mtu           pulumi.IntInput                              `pulumi:"mtu"`
	Name          pulumi.StringInput                           `pulumi:"name"`
	TagIds        pulumi.IntArrayInput                         `pulumi:"tagIds"`
	TaggedVlans   GetInterfacesInterfaceTaggedVlanArrayInput   `pulumi:"taggedVlans"`
	UntaggedVlans GetInterfacesInterfaceUntaggedVlanArrayInput `pulumi:"untaggedVlans"`
	VmId          pulumi.IntInput                              `pulumi:"vmId"`
}

func (GetInterfacesInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfacesInterface)(nil)).Elem()
}

func (i GetInterfacesInterfaceArgs) ToGetInterfacesInterfaceOutput() GetInterfacesInterfaceOutput {
	return i.ToGetInterfacesInterfaceOutputWithContext(context.Background())
}

func (i GetInterfacesInterfaceArgs) ToGetInterfacesInterfaceOutputWithContext(ctx context.Context) GetInterfacesInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfacesInterfaceOutput)
}

// GetInterfacesInterfaceArrayInput is an input type that accepts GetInterfacesInterfaceArray and GetInterfacesInterfaceArrayOutput values.
// You can construct a concrete instance of `GetInterfacesInterfaceArrayInput` via:
//
//	GetInterfacesInterfaceArray{ GetInterfacesInterfaceArgs{...} }
type GetInterfacesInterfaceArrayInput interface {
	pulumi.Input

	ToGetInterfacesInterfaceArrayOutput() GetInterfacesInterfaceArrayOutput
	ToGetInterfacesInterfaceArrayOutputWithContext(context.Context) GetInterfacesInterfaceArrayOutput
}

type GetInterfacesInterfaceArray []GetInterfacesInterfaceInput

func (GetInterfacesInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfacesInterface)(nil)).Elem()
}

func (i GetInterfacesInterfaceArray) ToGetInterfacesInterfaceArrayOutput() GetInterfacesInterfaceArrayOutput {
	return i.ToGetInterfacesInterfaceArrayOutputWithContext(context.Background())
}

func (i GetInterfacesInterfaceArray) ToGetInterfacesInterfaceArrayOutputWithContext(ctx context.Context) GetInterfacesInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfacesInterfaceArrayOutput)
}

type GetInterfacesInterfaceOutput struct{ *pulumi.OutputState }

func (GetInterfacesInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfacesInterface)(nil)).Elem()
}

func (o GetInterfacesInterfaceOutput) ToGetInterfacesInterfaceOutput() GetInterfacesInterfaceOutput {
	return o
}

func (o GetInterfacesInterfaceOutput) ToGetInterfacesInterfaceOutputWithContext(ctx context.Context) GetInterfacesInterfaceOutput {
	return o
}

func (o GetInterfacesInterfaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfacesInterface) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetInterfacesInterfaceOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInterfacesInterface) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetInterfacesInterfaceOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfacesInterface) string { return v.MacAddress }).(pulumi.StringOutput)
}

func (o GetInterfacesInterfaceOutput) Mode() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetInterfacesInterface) map[string]string { return v.Mode }).(pulumi.StringMapOutput)
}

func (o GetInterfacesInterfaceOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfacesInterface) int { return v.Mtu }).(pulumi.IntOutput)
}

func (o GetInterfacesInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfacesInterface) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInterfacesInterfaceOutput) TagIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetInterfacesInterface) []int { return v.TagIds }).(pulumi.IntArrayOutput)
}

func (o GetInterfacesInterfaceOutput) TaggedVlans() GetInterfacesInterfaceTaggedVlanArrayOutput {
	return o.ApplyT(func(v GetInterfacesInterface) []GetInterfacesInterfaceTaggedVlan { return v.TaggedVlans }).(GetInterfacesInterfaceTaggedVlanArrayOutput)
}

func (o GetInterfacesInterfaceOutput) UntaggedVlans() GetInterfacesInterfaceUntaggedVlanArrayOutput {
	return o.ApplyT(func(v GetInterfacesInterface) []GetInterfacesInterfaceUntaggedVlan { return v.UntaggedVlans }).(GetInterfacesInterfaceUntaggedVlanArrayOutput)
}

func (o GetInterfacesInterfaceOutput) VmId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfacesInterface) int { return v.VmId }).(pulumi.IntOutput)
}

type GetInterfacesInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetInterfacesInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfacesInterface)(nil)).Elem()
}

func (o GetInterfacesInterfaceArrayOutput) ToGetInterfacesInterfaceArrayOutput() GetInterfacesInterfaceArrayOutput {
	return o
}

func (o GetInterfacesInterfaceArrayOutput) ToGetInterfacesInterfaceArrayOutputWithContext(ctx context.Context) GetInterfacesInterfaceArrayOutput {
	return o
}

func (o GetInterfacesInterfaceArrayOutput) Index(i pulumi.IntInput) GetInterfacesInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfacesInterface {
		return vs[0].([]GetInterfacesInterface)[vs[1].(int)]
	}).(GetInterfacesInterfaceOutput)
}

type GetInterfacesInterfaceTaggedVlan struct {
	// The ID of this resource.
	Id   int    `pulumi:"id"`
	Name string `pulumi:"name"`
	Vid  int    `pulumi:"vid"`
}

// GetInterfacesInterfaceTaggedVlanInput is an input type that accepts GetInterfacesInterfaceTaggedVlanArgs and GetInterfacesInterfaceTaggedVlanOutput values.
// You can construct a concrete instance of `GetInterfacesInterfaceTaggedVlanInput` via:
//
//	GetInterfacesInterfaceTaggedVlanArgs{...}
type GetInterfacesInterfaceTaggedVlanInput interface {
	pulumi.Input

	ToGetInterfacesInterfaceTaggedVlanOutput() GetInterfacesInterfaceTaggedVlanOutput
	ToGetInterfacesInterfaceTaggedVlanOutputWithContext(context.Context) GetInterfacesInterfaceTaggedVlanOutput
}

type GetInterfacesInterfaceTaggedVlanArgs struct {
	// The ID of this resource.
	Id   pulumi.IntInput    `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
	Vid  pulumi.IntInput    `pulumi:"vid"`
}

func (GetInterfacesInterfaceTaggedVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfacesInterfaceTaggedVlan)(nil)).Elem()
}

func (i GetInterfacesInterfaceTaggedVlanArgs) ToGetInterfacesInterfaceTaggedVlanOutput() GetInterfacesInterfaceTaggedVlanOutput {
	return i.ToGetInterfacesInterfaceTaggedVlanOutputWithContext(context.Background())
}

func (i GetInterfacesInterfaceTaggedVlanArgs) ToGetInterfacesInterfaceTaggedVlanOutputWithContext(ctx context.Context) GetInterfacesInterfaceTaggedVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfacesInterfaceTaggedVlanOutput)
}

// GetInterfacesInterfaceTaggedVlanArrayInput is an input type that accepts GetInterfacesInterfaceTaggedVlanArray and GetInterfacesInterfaceTaggedVlanArrayOutput values.
// You can construct a concrete instance of `GetInterfacesInterfaceTaggedVlanArrayInput` via:
//
//	GetInterfacesInterfaceTaggedVlanArray{ GetInterfacesInterfaceTaggedVlanArgs{...} }
type GetInterfacesInterfaceTaggedVlanArrayInput interface {
	pulumi.Input

	ToGetInterfacesInterfaceTaggedVlanArrayOutput() GetInterfacesInterfaceTaggedVlanArrayOutput
	ToGetInterfacesInterfaceTaggedVlanArrayOutputWithContext(context.Context) GetInterfacesInterfaceTaggedVlanArrayOutput
}

type GetInterfacesInterfaceTaggedVlanArray []GetInterfacesInterfaceTaggedVlanInput

func (GetInterfacesInterfaceTaggedVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfacesInterfaceTaggedVlan)(nil)).Elem()
}

func (i GetInterfacesInterfaceTaggedVlanArray) ToGetInterfacesInterfaceTaggedVlanArrayOutput() GetInterfacesInterfaceTaggedVlanArrayOutput {
	return i.ToGetInterfacesInterfaceTaggedVlanArrayOutputWithContext(context.Background())
}

func (i GetInterfacesInterfaceTaggedVlanArray) ToGetInterfacesInterfaceTaggedVlanArrayOutputWithContext(ctx context.Context) GetInterfacesInterfaceTaggedVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfacesInterfaceTaggedVlanArrayOutput)
}

type GetInterfacesInterfaceTaggedVlanOutput struct{ *pulumi.OutputState }

func (GetInterfacesInterfaceTaggedVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfacesInterfaceTaggedVlan)(nil)).Elem()
}

func (o GetInterfacesInterfaceTaggedVlanOutput) ToGetInterfacesInterfaceTaggedVlanOutput() GetInterfacesInterfaceTaggedVlanOutput {
	return o
}

func (o GetInterfacesInterfaceTaggedVlanOutput) ToGetInterfacesInterfaceTaggedVlanOutputWithContext(ctx context.Context) GetInterfacesInterfaceTaggedVlanOutput {
	return o
}

// The ID of this resource.
func (o GetInterfacesInterfaceTaggedVlanOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfacesInterfaceTaggedVlan) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetInterfacesInterfaceTaggedVlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfacesInterfaceTaggedVlan) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInterfacesInterfaceTaggedVlanOutput) Vid() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfacesInterfaceTaggedVlan) int { return v.Vid }).(pulumi.IntOutput)
}

type GetInterfacesInterfaceTaggedVlanArrayOutput struct{ *pulumi.OutputState }

func (GetInterfacesInterfaceTaggedVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfacesInterfaceTaggedVlan)(nil)).Elem()
}

func (o GetInterfacesInterfaceTaggedVlanArrayOutput) ToGetInterfacesInterfaceTaggedVlanArrayOutput() GetInterfacesInterfaceTaggedVlanArrayOutput {
	return o
}

func (o GetInterfacesInterfaceTaggedVlanArrayOutput) ToGetInterfacesInterfaceTaggedVlanArrayOutputWithContext(ctx context.Context) GetInterfacesInterfaceTaggedVlanArrayOutput {
	return o
}

func (o GetInterfacesInterfaceTaggedVlanArrayOutput) Index(i pulumi.IntInput) GetInterfacesInterfaceTaggedVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfacesInterfaceTaggedVlan {
		return vs[0].([]GetInterfacesInterfaceTaggedVlan)[vs[1].(int)]
	}).(GetInterfacesInterfaceTaggedVlanOutput)
}

type GetInterfacesInterfaceUntaggedVlan struct {
	// The ID of this resource.
	Id   int    `pulumi:"id"`
	Name string `pulumi:"name"`
	Vid  int    `pulumi:"vid"`
}

// GetInterfacesInterfaceUntaggedVlanInput is an input type that accepts GetInterfacesInterfaceUntaggedVlanArgs and GetInterfacesInterfaceUntaggedVlanOutput values.
// You can construct a concrete instance of `GetInterfacesInterfaceUntaggedVlanInput` via:
//
//	GetInterfacesInterfaceUntaggedVlanArgs{...}
type GetInterfacesInterfaceUntaggedVlanInput interface {
	pulumi.Input

	ToGetInterfacesInterfaceUntaggedVlanOutput() GetInterfacesInterfaceUntaggedVlanOutput
	ToGetInterfacesInterfaceUntaggedVlanOutputWithContext(context.Context) GetInterfacesInterfaceUntaggedVlanOutput
}

type GetInterfacesInterfaceUntaggedVlanArgs struct {
	// The ID of this resource.
	Id   pulumi.IntInput    `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
	Vid  pulumi.IntInput    `pulumi:"vid"`
}

func (GetInterfacesInterfaceUntaggedVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfacesInterfaceUntaggedVlan)(nil)).Elem()
}

func (i GetInterfacesInterfaceUntaggedVlanArgs) ToGetInterfacesInterfaceUntaggedVlanOutput() GetInterfacesInterfaceUntaggedVlanOutput {
	return i.ToGetInterfacesInterfaceUntaggedVlanOutputWithContext(context.Background())
}

func (i GetInterfacesInterfaceUntaggedVlanArgs) ToGetInterfacesInterfaceUntaggedVlanOutputWithContext(ctx context.Context) GetInterfacesInterfaceUntaggedVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfacesInterfaceUntaggedVlanOutput)
}

// GetInterfacesInterfaceUntaggedVlanArrayInput is an input type that accepts GetInterfacesInterfaceUntaggedVlanArray and GetInterfacesInterfaceUntaggedVlanArrayOutput values.
// You can construct a concrete instance of `GetInterfacesInterfaceUntaggedVlanArrayInput` via:
//
//	GetInterfacesInterfaceUntaggedVlanArray{ GetInterfacesInterfaceUntaggedVlanArgs{...} }
type GetInterfacesInterfaceUntaggedVlanArrayInput interface {
	pulumi.Input

	ToGetInterfacesInterfaceUntaggedVlanArrayOutput() GetInterfacesInterfaceUntaggedVlanArrayOutput
	ToGetInterfacesInterfaceUntaggedVlanArrayOutputWithContext(context.Context) GetInterfacesInterfaceUntaggedVlanArrayOutput
}

type GetInterfacesInterfaceUntaggedVlanArray []GetInterfacesInterfaceUntaggedVlanInput

func (GetInterfacesInterfaceUntaggedVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfacesInterfaceUntaggedVlan)(nil)).Elem()
}

func (i GetInterfacesInterfaceUntaggedVlanArray) ToGetInterfacesInterfaceUntaggedVlanArrayOutput() GetInterfacesInterfaceUntaggedVlanArrayOutput {
	return i.ToGetInterfacesInterfaceUntaggedVlanArrayOutputWithContext(context.Background())
}

func (i GetInterfacesInterfaceUntaggedVlanArray) ToGetInterfacesInterfaceUntaggedVlanArrayOutputWithContext(ctx context.Context) GetInterfacesInterfaceUntaggedVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInterfacesInterfaceUntaggedVlanArrayOutput)
}

type GetInterfacesInterfaceUntaggedVlanOutput struct{ *pulumi.OutputState }

func (GetInterfacesInterfaceUntaggedVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInterfacesInterfaceUntaggedVlan)(nil)).Elem()
}

func (o GetInterfacesInterfaceUntaggedVlanOutput) ToGetInterfacesInterfaceUntaggedVlanOutput() GetInterfacesInterfaceUntaggedVlanOutput {
	return o
}

func (o GetInterfacesInterfaceUntaggedVlanOutput) ToGetInterfacesInterfaceUntaggedVlanOutputWithContext(ctx context.Context) GetInterfacesInterfaceUntaggedVlanOutput {
	return o
}

// The ID of this resource.
func (o GetInterfacesInterfaceUntaggedVlanOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfacesInterfaceUntaggedVlan) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetInterfacesInterfaceUntaggedVlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInterfacesInterfaceUntaggedVlan) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInterfacesInterfaceUntaggedVlanOutput) Vid() pulumi.IntOutput {
	return o.ApplyT(func(v GetInterfacesInterfaceUntaggedVlan) int { return v.Vid }).(pulumi.IntOutput)
}

type GetInterfacesInterfaceUntaggedVlanArrayOutput struct{ *pulumi.OutputState }

func (GetInterfacesInterfaceUntaggedVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInterfacesInterfaceUntaggedVlan)(nil)).Elem()
}

func (o GetInterfacesInterfaceUntaggedVlanArrayOutput) ToGetInterfacesInterfaceUntaggedVlanArrayOutput() GetInterfacesInterfaceUntaggedVlanArrayOutput {
	return o
}

func (o GetInterfacesInterfaceUntaggedVlanArrayOutput) ToGetInterfacesInterfaceUntaggedVlanArrayOutputWithContext(ctx context.Context) GetInterfacesInterfaceUntaggedVlanArrayOutput {
	return o
}

func (o GetInterfacesInterfaceUntaggedVlanArrayOutput) Index(i pulumi.IntInput) GetInterfacesInterfaceUntaggedVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInterfacesInterfaceUntaggedVlan {
		return vs[0].([]GetInterfacesInterfaceUntaggedVlan)[vs[1].(int)]
	}).(GetInterfacesInterfaceUntaggedVlanOutput)
}

type GetIpAddressesFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetIpAddressesFilterInput is an input type that accepts GetIpAddressesFilterArgs and GetIpAddressesFilterOutput values.
// You can construct a concrete instance of `GetIpAddressesFilterInput` via:
//
//	GetIpAddressesFilterArgs{...}
type GetIpAddressesFilterInput interface {
	pulumi.Input

	ToGetIpAddressesFilterOutput() GetIpAddressesFilterOutput
	ToGetIpAddressesFilterOutputWithContext(context.Context) GetIpAddressesFilterOutput
}

type GetIpAddressesFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetIpAddressesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesFilter)(nil)).Elem()
}

func (i GetIpAddressesFilterArgs) ToGetIpAddressesFilterOutput() GetIpAddressesFilterOutput {
	return i.ToGetIpAddressesFilterOutputWithContext(context.Background())
}

func (i GetIpAddressesFilterArgs) ToGetIpAddressesFilterOutputWithContext(ctx context.Context) GetIpAddressesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesFilterOutput)
}

// GetIpAddressesFilterArrayInput is an input type that accepts GetIpAddressesFilterArray and GetIpAddressesFilterArrayOutput values.
// You can construct a concrete instance of `GetIpAddressesFilterArrayInput` via:
//
//	GetIpAddressesFilterArray{ GetIpAddressesFilterArgs{...} }
type GetIpAddressesFilterArrayInput interface {
	pulumi.Input

	ToGetIpAddressesFilterArrayOutput() GetIpAddressesFilterArrayOutput
	ToGetIpAddressesFilterArrayOutputWithContext(context.Context) GetIpAddressesFilterArrayOutput
}

type GetIpAddressesFilterArray []GetIpAddressesFilterInput

func (GetIpAddressesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesFilter)(nil)).Elem()
}

func (i GetIpAddressesFilterArray) ToGetIpAddressesFilterArrayOutput() GetIpAddressesFilterArrayOutput {
	return i.ToGetIpAddressesFilterArrayOutputWithContext(context.Background())
}

func (i GetIpAddressesFilterArray) ToGetIpAddressesFilterArrayOutputWithContext(ctx context.Context) GetIpAddressesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesFilterArrayOutput)
}

type GetIpAddressesFilterOutput struct{ *pulumi.OutputState }

func (GetIpAddressesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesFilter)(nil)).Elem()
}

func (o GetIpAddressesFilterOutput) ToGetIpAddressesFilterOutput() GetIpAddressesFilterOutput {
	return o
}

func (o GetIpAddressesFilterOutput) ToGetIpAddressesFilterOutputWithContext(ctx context.Context) GetIpAddressesFilterOutput {
	return o
}

func (o GetIpAddressesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetIpAddressesFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetIpAddressesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetIpAddressesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesFilter)(nil)).Elem()
}

func (o GetIpAddressesFilterArrayOutput) ToGetIpAddressesFilterArrayOutput() GetIpAddressesFilterArrayOutput {
	return o
}

func (o GetIpAddressesFilterArrayOutput) ToGetIpAddressesFilterArrayOutputWithContext(ctx context.Context) GetIpAddressesFilterArrayOutput {
	return o
}

func (o GetIpAddressesFilterArrayOutput) Index(i pulumi.IntInput) GetIpAddressesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpAddressesFilter {
		return vs[0].([]GetIpAddressesFilter)[vs[1].(int)]
	}).(GetIpAddressesFilterOutput)
}

type GetIpAddressesIpAddress struct {
	AddressFamily string                 `pulumi:"addressFamily"`
	Created       string                 `pulumi:"created"`
	CustomFields  map[string]interface{} `pulumi:"customFields"`
	Description   string                 `pulumi:"description"`
	DnsName       string                 `pulumi:"dnsName"`
	// The ID of this resource.
	Id          int                             `pulumi:"id"`
	IpAddress   string                          `pulumi:"ipAddress"`
	LastUpdated string                          `pulumi:"lastUpdated"`
	Role        string                          `pulumi:"role"`
	Status      string                          `pulumi:"status"`
	Tenants     []GetIpAddressesIpAddressTenant `pulumi:"tenants"`
}

// GetIpAddressesIpAddressInput is an input type that accepts GetIpAddressesIpAddressArgs and GetIpAddressesIpAddressOutput values.
// You can construct a concrete instance of `GetIpAddressesIpAddressInput` via:
//
//	GetIpAddressesIpAddressArgs{...}
type GetIpAddressesIpAddressInput interface {
	pulumi.Input

	ToGetIpAddressesIpAddressOutput() GetIpAddressesIpAddressOutput
	ToGetIpAddressesIpAddressOutputWithContext(context.Context) GetIpAddressesIpAddressOutput
}

type GetIpAddressesIpAddressArgs struct {
	AddressFamily pulumi.StringInput `pulumi:"addressFamily"`
	Created       pulumi.StringInput `pulumi:"created"`
	CustomFields  pulumi.MapInput    `pulumi:"customFields"`
	Description   pulumi.StringInput `pulumi:"description"`
	DnsName       pulumi.StringInput `pulumi:"dnsName"`
	// The ID of this resource.
	Id          pulumi.IntInput                         `pulumi:"id"`
	IpAddress   pulumi.StringInput                      `pulumi:"ipAddress"`
	LastUpdated pulumi.StringInput                      `pulumi:"lastUpdated"`
	Role        pulumi.StringInput                      `pulumi:"role"`
	Status      pulumi.StringInput                      `pulumi:"status"`
	Tenants     GetIpAddressesIpAddressTenantArrayInput `pulumi:"tenants"`
}

func (GetIpAddressesIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesIpAddress)(nil)).Elem()
}

func (i GetIpAddressesIpAddressArgs) ToGetIpAddressesIpAddressOutput() GetIpAddressesIpAddressOutput {
	return i.ToGetIpAddressesIpAddressOutputWithContext(context.Background())
}

func (i GetIpAddressesIpAddressArgs) ToGetIpAddressesIpAddressOutputWithContext(ctx context.Context) GetIpAddressesIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesIpAddressOutput)
}

// GetIpAddressesIpAddressArrayInput is an input type that accepts GetIpAddressesIpAddressArray and GetIpAddressesIpAddressArrayOutput values.
// You can construct a concrete instance of `GetIpAddressesIpAddressArrayInput` via:
//
//	GetIpAddressesIpAddressArray{ GetIpAddressesIpAddressArgs{...} }
type GetIpAddressesIpAddressArrayInput interface {
	pulumi.Input

	ToGetIpAddressesIpAddressArrayOutput() GetIpAddressesIpAddressArrayOutput
	ToGetIpAddressesIpAddressArrayOutputWithContext(context.Context) GetIpAddressesIpAddressArrayOutput
}

type GetIpAddressesIpAddressArray []GetIpAddressesIpAddressInput

func (GetIpAddressesIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesIpAddress)(nil)).Elem()
}

func (i GetIpAddressesIpAddressArray) ToGetIpAddressesIpAddressArrayOutput() GetIpAddressesIpAddressArrayOutput {
	return i.ToGetIpAddressesIpAddressArrayOutputWithContext(context.Background())
}

func (i GetIpAddressesIpAddressArray) ToGetIpAddressesIpAddressArrayOutputWithContext(ctx context.Context) GetIpAddressesIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesIpAddressArrayOutput)
}

type GetIpAddressesIpAddressOutput struct{ *pulumi.OutputState }

func (GetIpAddressesIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesIpAddress)(nil)).Elem()
}

func (o GetIpAddressesIpAddressOutput) ToGetIpAddressesIpAddressOutput() GetIpAddressesIpAddressOutput {
	return o
}

func (o GetIpAddressesIpAddressOutput) ToGetIpAddressesIpAddressOutputWithContext(ctx context.Context) GetIpAddressesIpAddressOutput {
	return o
}

func (o GetIpAddressesIpAddressOutput) AddressFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.AddressFamily }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressOutput) CustomFields() pulumi.MapOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) map[string]interface{} { return v.CustomFields }).(pulumi.MapOutput)
}

func (o GetIpAddressesIpAddressOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.DnsName }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetIpAddressesIpAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetIpAddressesIpAddressOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.LastUpdated }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.Role }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressOutput) Tenants() GetIpAddressesIpAddressTenantArrayOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) []GetIpAddressesIpAddressTenant { return v.Tenants }).(GetIpAddressesIpAddressTenantArrayOutput)
}

type GetIpAddressesIpAddressArrayOutput struct{ *pulumi.OutputState }

func (GetIpAddressesIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesIpAddress)(nil)).Elem()
}

func (o GetIpAddressesIpAddressArrayOutput) ToGetIpAddressesIpAddressArrayOutput() GetIpAddressesIpAddressArrayOutput {
	return o
}

func (o GetIpAddressesIpAddressArrayOutput) ToGetIpAddressesIpAddressArrayOutputWithContext(ctx context.Context) GetIpAddressesIpAddressArrayOutput {
	return o
}

func (o GetIpAddressesIpAddressArrayOutput) Index(i pulumi.IntInput) GetIpAddressesIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpAddressesIpAddress {
		return vs[0].([]GetIpAddressesIpAddress)[vs[1].(int)]
	}).(GetIpAddressesIpAddressOutput)
}

type GetIpAddressesIpAddressTenant struct {
	// The ID of this resource.
	Id   int    `pulumi:"id"`
	Name string `pulumi:"name"`
	Slug string `pulumi:"slug"`
}

// GetIpAddressesIpAddressTenantInput is an input type that accepts GetIpAddressesIpAddressTenantArgs and GetIpAddressesIpAddressTenantOutput values.
// You can construct a concrete instance of `GetIpAddressesIpAddressTenantInput` via:
//
//	GetIpAddressesIpAddressTenantArgs{...}
type GetIpAddressesIpAddressTenantInput interface {
	pulumi.Input

	ToGetIpAddressesIpAddressTenantOutput() GetIpAddressesIpAddressTenantOutput
	ToGetIpAddressesIpAddressTenantOutputWithContext(context.Context) GetIpAddressesIpAddressTenantOutput
}

type GetIpAddressesIpAddressTenantArgs struct {
	// The ID of this resource.
	Id   pulumi.IntInput    `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (GetIpAddressesIpAddressTenantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesIpAddressTenant)(nil)).Elem()
}

func (i GetIpAddressesIpAddressTenantArgs) ToGetIpAddressesIpAddressTenantOutput() GetIpAddressesIpAddressTenantOutput {
	return i.ToGetIpAddressesIpAddressTenantOutputWithContext(context.Background())
}

func (i GetIpAddressesIpAddressTenantArgs) ToGetIpAddressesIpAddressTenantOutputWithContext(ctx context.Context) GetIpAddressesIpAddressTenantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesIpAddressTenantOutput)
}

// GetIpAddressesIpAddressTenantArrayInput is an input type that accepts GetIpAddressesIpAddressTenantArray and GetIpAddressesIpAddressTenantArrayOutput values.
// You can construct a concrete instance of `GetIpAddressesIpAddressTenantArrayInput` via:
//
//	GetIpAddressesIpAddressTenantArray{ GetIpAddressesIpAddressTenantArgs{...} }
type GetIpAddressesIpAddressTenantArrayInput interface {
	pulumi.Input

	ToGetIpAddressesIpAddressTenantArrayOutput() GetIpAddressesIpAddressTenantArrayOutput
	ToGetIpAddressesIpAddressTenantArrayOutputWithContext(context.Context) GetIpAddressesIpAddressTenantArrayOutput
}

type GetIpAddressesIpAddressTenantArray []GetIpAddressesIpAddressTenantInput

func (GetIpAddressesIpAddressTenantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesIpAddressTenant)(nil)).Elem()
}

func (i GetIpAddressesIpAddressTenantArray) ToGetIpAddressesIpAddressTenantArrayOutput() GetIpAddressesIpAddressTenantArrayOutput {
	return i.ToGetIpAddressesIpAddressTenantArrayOutputWithContext(context.Background())
}

func (i GetIpAddressesIpAddressTenantArray) ToGetIpAddressesIpAddressTenantArrayOutputWithContext(ctx context.Context) GetIpAddressesIpAddressTenantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesIpAddressTenantArrayOutput)
}

type GetIpAddressesIpAddressTenantOutput struct{ *pulumi.OutputState }

func (GetIpAddressesIpAddressTenantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesIpAddressTenant)(nil)).Elem()
}

func (o GetIpAddressesIpAddressTenantOutput) ToGetIpAddressesIpAddressTenantOutput() GetIpAddressesIpAddressTenantOutput {
	return o
}

func (o GetIpAddressesIpAddressTenantOutput) ToGetIpAddressesIpAddressTenantOutputWithContext(ctx context.Context) GetIpAddressesIpAddressTenantOutput {
	return o
}

// The ID of this resource.
func (o GetIpAddressesIpAddressTenantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddressTenant) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetIpAddressesIpAddressTenantOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddressTenant) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressTenantOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddressTenant) string { return v.Slug }).(pulumi.StringOutput)
}

type GetIpAddressesIpAddressTenantArrayOutput struct{ *pulumi.OutputState }

func (GetIpAddressesIpAddressTenantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesIpAddressTenant)(nil)).Elem()
}

func (o GetIpAddressesIpAddressTenantArrayOutput) ToGetIpAddressesIpAddressTenantArrayOutput() GetIpAddressesIpAddressTenantArrayOutput {
	return o
}

func (o GetIpAddressesIpAddressTenantArrayOutput) ToGetIpAddressesIpAddressTenantArrayOutputWithContext(ctx context.Context) GetIpAddressesIpAddressTenantArrayOutput {
	return o
}

func (o GetIpAddressesIpAddressTenantArrayOutput) Index(i pulumi.IntInput) GetIpAddressesIpAddressTenantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpAddressesIpAddressTenant {
		return vs[0].([]GetIpAddressesIpAddressTenant)[vs[1].(int)]
	}).(GetIpAddressesIpAddressTenantOutput)
}

type GetRegionFilter struct {
	// The ID of this resource.
	Id   *int    `pulumi:"id"`
	Name *string `pulumi:"name"`
	Slug *string `pulumi:"slug"`
}

// GetRegionFilterInput is an input type that accepts GetRegionFilterArgs and GetRegionFilterOutput values.
// You can construct a concrete instance of `GetRegionFilterInput` via:
//
//	GetRegionFilterArgs{...}
type GetRegionFilterInput interface {
	pulumi.Input

	ToGetRegionFilterOutput() GetRegionFilterOutput
	ToGetRegionFilterOutputWithContext(context.Context) GetRegionFilterOutput
}

type GetRegionFilterArgs struct {
	// The ID of this resource.
	Id   pulumi.IntPtrInput    `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
	Slug pulumi.StringPtrInput `pulumi:"slug"`
}

func (GetRegionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionFilter)(nil)).Elem()
}

func (i GetRegionFilterArgs) ToGetRegionFilterOutput() GetRegionFilterOutput {
	return i.ToGetRegionFilterOutputWithContext(context.Background())
}

func (i GetRegionFilterArgs) ToGetRegionFilterOutputWithContext(ctx context.Context) GetRegionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionFilterOutput)
}

// GetRegionFilterArrayInput is an input type that accepts GetRegionFilterArray and GetRegionFilterArrayOutput values.
// You can construct a concrete instance of `GetRegionFilterArrayInput` via:
//
//	GetRegionFilterArray{ GetRegionFilterArgs{...} }
type GetRegionFilterArrayInput interface {
	pulumi.Input

	ToGetRegionFilterArrayOutput() GetRegionFilterArrayOutput
	ToGetRegionFilterArrayOutputWithContext(context.Context) GetRegionFilterArrayOutput
}

type GetRegionFilterArray []GetRegionFilterInput

func (GetRegionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionFilter)(nil)).Elem()
}

func (i GetRegionFilterArray) ToGetRegionFilterArrayOutput() GetRegionFilterArrayOutput {
	return i.ToGetRegionFilterArrayOutputWithContext(context.Background())
}

func (i GetRegionFilterArray) ToGetRegionFilterArrayOutputWithContext(ctx context.Context) GetRegionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionFilterArrayOutput)
}

type GetRegionFilterOutput struct{ *pulumi.OutputState }

func (GetRegionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionFilter)(nil)).Elem()
}

func (o GetRegionFilterOutput) ToGetRegionFilterOutput() GetRegionFilterOutput {
	return o
}

func (o GetRegionFilterOutput) ToGetRegionFilterOutputWithContext(ctx context.Context) GetRegionFilterOutput {
	return o
}

// The ID of this resource.
func (o GetRegionFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetRegionFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o GetRegionFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetRegionFilterOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionFilter) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

type GetRegionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRegionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionFilter)(nil)).Elem()
}

func (o GetRegionFilterArrayOutput) ToGetRegionFilterArrayOutput() GetRegionFilterArrayOutput {
	return o
}

func (o GetRegionFilterArrayOutput) ToGetRegionFilterArrayOutputWithContext(ctx context.Context) GetRegionFilterArrayOutput {
	return o
}

func (o GetRegionFilterArrayOutput) Index(i pulumi.IntInput) GetRegionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionFilter {
		return vs[0].([]GetRegionFilter)[vs[1].(int)]
	}).(GetRegionFilterOutput)
}

type GetTenantsFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetTenantsFilterInput is an input type that accepts GetTenantsFilterArgs and GetTenantsFilterOutput values.
// You can construct a concrete instance of `GetTenantsFilterInput` via:
//
//	GetTenantsFilterArgs{...}
type GetTenantsFilterInput interface {
	pulumi.Input

	ToGetTenantsFilterOutput() GetTenantsFilterOutput
	ToGetTenantsFilterOutputWithContext(context.Context) GetTenantsFilterOutput
}

type GetTenantsFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTenantsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantsFilter)(nil)).Elem()
}

func (i GetTenantsFilterArgs) ToGetTenantsFilterOutput() GetTenantsFilterOutput {
	return i.ToGetTenantsFilterOutputWithContext(context.Background())
}

func (i GetTenantsFilterArgs) ToGetTenantsFilterOutputWithContext(ctx context.Context) GetTenantsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantsFilterOutput)
}

// GetTenantsFilterArrayInput is an input type that accepts GetTenantsFilterArray and GetTenantsFilterArrayOutput values.
// You can construct a concrete instance of `GetTenantsFilterArrayInput` via:
//
//	GetTenantsFilterArray{ GetTenantsFilterArgs{...} }
type GetTenantsFilterArrayInput interface {
	pulumi.Input

	ToGetTenantsFilterArrayOutput() GetTenantsFilterArrayOutput
	ToGetTenantsFilterArrayOutputWithContext(context.Context) GetTenantsFilterArrayOutput
}

type GetTenantsFilterArray []GetTenantsFilterInput

func (GetTenantsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantsFilter)(nil)).Elem()
}

func (i GetTenantsFilterArray) ToGetTenantsFilterArrayOutput() GetTenantsFilterArrayOutput {
	return i.ToGetTenantsFilterArrayOutputWithContext(context.Background())
}

func (i GetTenantsFilterArray) ToGetTenantsFilterArrayOutputWithContext(ctx context.Context) GetTenantsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantsFilterArrayOutput)
}

type GetTenantsFilterOutput struct{ *pulumi.OutputState }

func (GetTenantsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantsFilter)(nil)).Elem()
}

func (o GetTenantsFilterOutput) ToGetTenantsFilterOutput() GetTenantsFilterOutput {
	return o
}

func (o GetTenantsFilterOutput) ToGetTenantsFilterOutputWithContext(ctx context.Context) GetTenantsFilterOutput {
	return o
}

func (o GetTenantsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTenantsFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetTenantsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetTenantsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantsFilter)(nil)).Elem()
}

func (o GetTenantsFilterArrayOutput) ToGetTenantsFilterArrayOutput() GetTenantsFilterArrayOutput {
	return o
}

func (o GetTenantsFilterArrayOutput) ToGetTenantsFilterArrayOutputWithContext(ctx context.Context) GetTenantsFilterArrayOutput {
	return o
}

func (o GetTenantsFilterArrayOutput) Index(i pulumi.IntInput) GetTenantsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTenantsFilter {
		return vs[0].([]GetTenantsFilter)[vs[1].(int)]
	}).(GetTenantsFilterOutput)
}

type GetTenantsTenant struct {
	CircuitCount int                    `pulumi:"circuitCount"`
	ClusterCount int                    `pulumi:"clusterCount"`
	Comments     string                 `pulumi:"comments"`
	Created      string                 `pulumi:"created"`
	CustomFields map[string]interface{} `pulumi:"customFields"`
	Description  string                 `pulumi:"description"`
	DeviceCount  int                    `pulumi:"deviceCount"`
	// The ID of this resource.
	Id             int                           `pulumi:"id"`
	IpAddressCount int                           `pulumi:"ipAddressCount"`
	LastUpdated    string                        `pulumi:"lastUpdated"`
	Name           string                        `pulumi:"name"`
	PrefixCount    int                           `pulumi:"prefixCount"`
	RackCount      int                           `pulumi:"rackCount"`
	SiteCount      int                           `pulumi:"siteCount"`
	Slug           string                        `pulumi:"slug"`
	TenantGroups   []GetTenantsTenantTenantGroup `pulumi:"tenantGroups"`
	VlanCount      int                           `pulumi:"vlanCount"`
	VmCount        int                           `pulumi:"vmCount"`
	VrfCount       int                           `pulumi:"vrfCount"`
}

// GetTenantsTenantInput is an input type that accepts GetTenantsTenantArgs and GetTenantsTenantOutput values.
// You can construct a concrete instance of `GetTenantsTenantInput` via:
//
//	GetTenantsTenantArgs{...}
type GetTenantsTenantInput interface {
	pulumi.Input

	ToGetTenantsTenantOutput() GetTenantsTenantOutput
	ToGetTenantsTenantOutputWithContext(context.Context) GetTenantsTenantOutput
}

type GetTenantsTenantArgs struct {
	CircuitCount pulumi.IntInput    `pulumi:"circuitCount"`
	ClusterCount pulumi.IntInput    `pulumi:"clusterCount"`
	Comments     pulumi.StringInput `pulumi:"comments"`
	Created      pulumi.StringInput `pulumi:"created"`
	CustomFields pulumi.MapInput    `pulumi:"customFields"`
	Description  pulumi.StringInput `pulumi:"description"`
	DeviceCount  pulumi.IntInput    `pulumi:"deviceCount"`
	// The ID of this resource.
	Id             pulumi.IntInput                       `pulumi:"id"`
	IpAddressCount pulumi.IntInput                       `pulumi:"ipAddressCount"`
	LastUpdated    pulumi.StringInput                    `pulumi:"lastUpdated"`
	Name           pulumi.StringInput                    `pulumi:"name"`
	PrefixCount    pulumi.IntInput                       `pulumi:"prefixCount"`
	RackCount      pulumi.IntInput                       `pulumi:"rackCount"`
	SiteCount      pulumi.IntInput                       `pulumi:"siteCount"`
	Slug           pulumi.StringInput                    `pulumi:"slug"`
	TenantGroups   GetTenantsTenantTenantGroupArrayInput `pulumi:"tenantGroups"`
	VlanCount      pulumi.IntInput                       `pulumi:"vlanCount"`
	VmCount        pulumi.IntInput                       `pulumi:"vmCount"`
	VrfCount       pulumi.IntInput                       `pulumi:"vrfCount"`
}

func (GetTenantsTenantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantsTenant)(nil)).Elem()
}

func (i GetTenantsTenantArgs) ToGetTenantsTenantOutput() GetTenantsTenantOutput {
	return i.ToGetTenantsTenantOutputWithContext(context.Background())
}

func (i GetTenantsTenantArgs) ToGetTenantsTenantOutputWithContext(ctx context.Context) GetTenantsTenantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantsTenantOutput)
}

// GetTenantsTenantArrayInput is an input type that accepts GetTenantsTenantArray and GetTenantsTenantArrayOutput values.
// You can construct a concrete instance of `GetTenantsTenantArrayInput` via:
//
//	GetTenantsTenantArray{ GetTenantsTenantArgs{...} }
type GetTenantsTenantArrayInput interface {
	pulumi.Input

	ToGetTenantsTenantArrayOutput() GetTenantsTenantArrayOutput
	ToGetTenantsTenantArrayOutputWithContext(context.Context) GetTenantsTenantArrayOutput
}

type GetTenantsTenantArray []GetTenantsTenantInput

func (GetTenantsTenantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantsTenant)(nil)).Elem()
}

func (i GetTenantsTenantArray) ToGetTenantsTenantArrayOutput() GetTenantsTenantArrayOutput {
	return i.ToGetTenantsTenantArrayOutputWithContext(context.Background())
}

func (i GetTenantsTenantArray) ToGetTenantsTenantArrayOutputWithContext(ctx context.Context) GetTenantsTenantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantsTenantArrayOutput)
}

type GetTenantsTenantOutput struct{ *pulumi.OutputState }

func (GetTenantsTenantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantsTenant)(nil)).Elem()
}

func (o GetTenantsTenantOutput) ToGetTenantsTenantOutput() GetTenantsTenantOutput {
	return o
}

func (o GetTenantsTenantOutput) ToGetTenantsTenantOutputWithContext(ctx context.Context) GetTenantsTenantOutput {
	return o
}

func (o GetTenantsTenantOutput) CircuitCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.CircuitCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) ClusterCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.ClusterCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.Comments }).(pulumi.StringOutput)
}

func (o GetTenantsTenantOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetTenantsTenantOutput) CustomFields() pulumi.MapOutput {
	return o.ApplyT(func(v GetTenantsTenant) map[string]interface{} { return v.CustomFields }).(pulumi.MapOutput)
}

func (o GetTenantsTenantOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetTenantsTenantOutput) DeviceCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.DeviceCount }).(pulumi.IntOutput)
}

// The ID of this resource.
func (o GetTenantsTenantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) IpAddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.IpAddressCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.LastUpdated }).(pulumi.StringOutput)
}

func (o GetTenantsTenantOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTenantsTenantOutput) PrefixCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.PrefixCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) RackCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.RackCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) SiteCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.SiteCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.Slug }).(pulumi.StringOutput)
}

func (o GetTenantsTenantOutput) TenantGroups() GetTenantsTenantTenantGroupArrayOutput {
	return o.ApplyT(func(v GetTenantsTenant) []GetTenantsTenantTenantGroup { return v.TenantGroups }).(GetTenantsTenantTenantGroupArrayOutput)
}

func (o GetTenantsTenantOutput) VlanCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.VlanCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) VmCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.VmCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) VrfCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.VrfCount }).(pulumi.IntOutput)
}

type GetTenantsTenantArrayOutput struct{ *pulumi.OutputState }

func (GetTenantsTenantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantsTenant)(nil)).Elem()
}

func (o GetTenantsTenantArrayOutput) ToGetTenantsTenantArrayOutput() GetTenantsTenantArrayOutput {
	return o
}

func (o GetTenantsTenantArrayOutput) ToGetTenantsTenantArrayOutputWithContext(ctx context.Context) GetTenantsTenantArrayOutput {
	return o
}

func (o GetTenantsTenantArrayOutput) Index(i pulumi.IntInput) GetTenantsTenantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTenantsTenant {
		return vs[0].([]GetTenantsTenant)[vs[1].(int)]
	}).(GetTenantsTenantOutput)
}

type GetTenantsTenantTenantGroup struct {
	// The ID of this resource.
	Id          int    `pulumi:"id"`
	Name        string `pulumi:"name"`
	Slug        string `pulumi:"slug"`
	TenantCount int    `pulumi:"tenantCount"`
}

// GetTenantsTenantTenantGroupInput is an input type that accepts GetTenantsTenantTenantGroupArgs and GetTenantsTenantTenantGroupOutput values.
// You can construct a concrete instance of `GetTenantsTenantTenantGroupInput` via:
//
//	GetTenantsTenantTenantGroupArgs{...}
type GetTenantsTenantTenantGroupInput interface {
	pulumi.Input

	ToGetTenantsTenantTenantGroupOutput() GetTenantsTenantTenantGroupOutput
	ToGetTenantsTenantTenantGroupOutputWithContext(context.Context) GetTenantsTenantTenantGroupOutput
}

type GetTenantsTenantTenantGroupArgs struct {
	// The ID of this resource.
	Id          pulumi.IntInput    `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
	Slug        pulumi.StringInput `pulumi:"slug"`
	TenantCount pulumi.IntInput    `pulumi:"tenantCount"`
}

func (GetTenantsTenantTenantGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantsTenantTenantGroup)(nil)).Elem()
}

func (i GetTenantsTenantTenantGroupArgs) ToGetTenantsTenantTenantGroupOutput() GetTenantsTenantTenantGroupOutput {
	return i.ToGetTenantsTenantTenantGroupOutputWithContext(context.Background())
}

func (i GetTenantsTenantTenantGroupArgs) ToGetTenantsTenantTenantGroupOutputWithContext(ctx context.Context) GetTenantsTenantTenantGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantsTenantTenantGroupOutput)
}

// GetTenantsTenantTenantGroupArrayInput is an input type that accepts GetTenantsTenantTenantGroupArray and GetTenantsTenantTenantGroupArrayOutput values.
// You can construct a concrete instance of `GetTenantsTenantTenantGroupArrayInput` via:
//
//	GetTenantsTenantTenantGroupArray{ GetTenantsTenantTenantGroupArgs{...} }
type GetTenantsTenantTenantGroupArrayInput interface {
	pulumi.Input

	ToGetTenantsTenantTenantGroupArrayOutput() GetTenantsTenantTenantGroupArrayOutput
	ToGetTenantsTenantTenantGroupArrayOutputWithContext(context.Context) GetTenantsTenantTenantGroupArrayOutput
}

type GetTenantsTenantTenantGroupArray []GetTenantsTenantTenantGroupInput

func (GetTenantsTenantTenantGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantsTenantTenantGroup)(nil)).Elem()
}

func (i GetTenantsTenantTenantGroupArray) ToGetTenantsTenantTenantGroupArrayOutput() GetTenantsTenantTenantGroupArrayOutput {
	return i.ToGetTenantsTenantTenantGroupArrayOutputWithContext(context.Background())
}

func (i GetTenantsTenantTenantGroupArray) ToGetTenantsTenantTenantGroupArrayOutputWithContext(ctx context.Context) GetTenantsTenantTenantGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantsTenantTenantGroupArrayOutput)
}

type GetTenantsTenantTenantGroupOutput struct{ *pulumi.OutputState }

func (GetTenantsTenantTenantGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantsTenantTenantGroup)(nil)).Elem()
}

func (o GetTenantsTenantTenantGroupOutput) ToGetTenantsTenantTenantGroupOutput() GetTenantsTenantTenantGroupOutput {
	return o
}

func (o GetTenantsTenantTenantGroupOutput) ToGetTenantsTenantTenantGroupOutputWithContext(ctx context.Context) GetTenantsTenantTenantGroupOutput {
	return o
}

// The ID of this resource.
func (o GetTenantsTenantTenantGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenantTenantGroup) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetTenantsTenantTenantGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenantTenantGroup) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTenantsTenantTenantGroupOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenantTenantGroup) string { return v.Slug }).(pulumi.StringOutput)
}

func (o GetTenantsTenantTenantGroupOutput) TenantCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenantTenantGroup) int { return v.TenantCount }).(pulumi.IntOutput)
}

type GetTenantsTenantTenantGroupArrayOutput struct{ *pulumi.OutputState }

func (GetTenantsTenantTenantGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantsTenantTenantGroup)(nil)).Elem()
}

func (o GetTenantsTenantTenantGroupArrayOutput) ToGetTenantsTenantTenantGroupArrayOutput() GetTenantsTenantTenantGroupArrayOutput {
	return o
}

func (o GetTenantsTenantTenantGroupArrayOutput) ToGetTenantsTenantTenantGroupArrayOutputWithContext(ctx context.Context) GetTenantsTenantTenantGroupArrayOutput {
	return o
}

func (o GetTenantsTenantTenantGroupArrayOutput) Index(i pulumi.IntInput) GetTenantsTenantTenantGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTenantsTenantTenantGroup {
		return vs[0].([]GetTenantsTenantTenantGroup)[vs[1].(int)]
	}).(GetTenantsTenantTenantGroupOutput)
}

type GetVirtualMachinesFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetVirtualMachinesFilterInput is an input type that accepts GetVirtualMachinesFilterArgs and GetVirtualMachinesFilterOutput values.
// You can construct a concrete instance of `GetVirtualMachinesFilterInput` via:
//
//	GetVirtualMachinesFilterArgs{...}
type GetVirtualMachinesFilterInput interface {
	pulumi.Input

	ToGetVirtualMachinesFilterOutput() GetVirtualMachinesFilterOutput
	ToGetVirtualMachinesFilterOutputWithContext(context.Context) GetVirtualMachinesFilterOutput
}

type GetVirtualMachinesFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVirtualMachinesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualMachinesFilter)(nil)).Elem()
}

func (i GetVirtualMachinesFilterArgs) ToGetVirtualMachinesFilterOutput() GetVirtualMachinesFilterOutput {
	return i.ToGetVirtualMachinesFilterOutputWithContext(context.Background())
}

func (i GetVirtualMachinesFilterArgs) ToGetVirtualMachinesFilterOutputWithContext(ctx context.Context) GetVirtualMachinesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualMachinesFilterOutput)
}

// GetVirtualMachinesFilterArrayInput is an input type that accepts GetVirtualMachinesFilterArray and GetVirtualMachinesFilterArrayOutput values.
// You can construct a concrete instance of `GetVirtualMachinesFilterArrayInput` via:
//
//	GetVirtualMachinesFilterArray{ GetVirtualMachinesFilterArgs{...} }
type GetVirtualMachinesFilterArrayInput interface {
	pulumi.Input

	ToGetVirtualMachinesFilterArrayOutput() GetVirtualMachinesFilterArrayOutput
	ToGetVirtualMachinesFilterArrayOutputWithContext(context.Context) GetVirtualMachinesFilterArrayOutput
}

type GetVirtualMachinesFilterArray []GetVirtualMachinesFilterInput

func (GetVirtualMachinesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualMachinesFilter)(nil)).Elem()
}

func (i GetVirtualMachinesFilterArray) ToGetVirtualMachinesFilterArrayOutput() GetVirtualMachinesFilterArrayOutput {
	return i.ToGetVirtualMachinesFilterArrayOutputWithContext(context.Background())
}

func (i GetVirtualMachinesFilterArray) ToGetVirtualMachinesFilterArrayOutputWithContext(ctx context.Context) GetVirtualMachinesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualMachinesFilterArrayOutput)
}

type GetVirtualMachinesFilterOutput struct{ *pulumi.OutputState }

func (GetVirtualMachinesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualMachinesFilter)(nil)).Elem()
}

func (o GetVirtualMachinesFilterOutput) ToGetVirtualMachinesFilterOutput() GetVirtualMachinesFilterOutput {
	return o
}

func (o GetVirtualMachinesFilterOutput) ToGetVirtualMachinesFilterOutputWithContext(ctx context.Context) GetVirtualMachinesFilterOutput {
	return o
}

func (o GetVirtualMachinesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachinesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVirtualMachinesFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachinesFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetVirtualMachinesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualMachinesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualMachinesFilter)(nil)).Elem()
}

func (o GetVirtualMachinesFilterArrayOutput) ToGetVirtualMachinesFilterArrayOutput() GetVirtualMachinesFilterArrayOutput {
	return o
}

func (o GetVirtualMachinesFilterArrayOutput) ToGetVirtualMachinesFilterArrayOutputWithContext(ctx context.Context) GetVirtualMachinesFilterArrayOutput {
	return o
}

func (o GetVirtualMachinesFilterArrayOutput) Index(i pulumi.IntInput) GetVirtualMachinesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualMachinesFilter {
		return vs[0].([]GetVirtualMachinesFilter)[vs[1].(int)]
	}).(GetVirtualMachinesFilterOutput)
}

type GetVirtualMachinesVm struct {
	ClusterId        int                    `pulumi:"clusterId"`
	Comments         string                 `pulumi:"comments"`
	ConfigContext    string                 `pulumi:"configContext"`
	CustomFields     map[string]interface{} `pulumi:"customFields"`
	DiskSizeGb       int                    `pulumi:"diskSizeGb"`
	LocalContextData string                 `pulumi:"localContextData"`
	MemoryMb         int                    `pulumi:"memoryMb"`
	Name             string                 `pulumi:"name"`
	PlatformId       int                    `pulumi:"platformId"`
	PrimaryIp        string                 `pulumi:"primaryIp"`
	PrimaryIp4       string                 `pulumi:"primaryIp4"`
	PrimaryIp6       string                 `pulumi:"primaryIp6"`
	RoleId           int                    `pulumi:"roleId"`
	SiteId           int                    `pulumi:"siteId"`
	Status           string                 `pulumi:"status"`
	TagIds           []int                  `pulumi:"tagIds"`
	TenantId         int                    `pulumi:"tenantId"`
	Vcpus            float64                `pulumi:"vcpus"`
	VmId             int                    `pulumi:"vmId"`
}

// GetVirtualMachinesVmInput is an input type that accepts GetVirtualMachinesVmArgs and GetVirtualMachinesVmOutput values.
// You can construct a concrete instance of `GetVirtualMachinesVmInput` via:
//
//	GetVirtualMachinesVmArgs{...}
type GetVirtualMachinesVmInput interface {
	pulumi.Input

	ToGetVirtualMachinesVmOutput() GetVirtualMachinesVmOutput
	ToGetVirtualMachinesVmOutputWithContext(context.Context) GetVirtualMachinesVmOutput
}

type GetVirtualMachinesVmArgs struct {
	ClusterId        pulumi.IntInput      `pulumi:"clusterId"`
	Comments         pulumi.StringInput   `pulumi:"comments"`
	ConfigContext    pulumi.StringInput   `pulumi:"configContext"`
	CustomFields     pulumi.MapInput      `pulumi:"customFields"`
	DiskSizeGb       pulumi.IntInput      `pulumi:"diskSizeGb"`
	LocalContextData pulumi.StringInput   `pulumi:"localContextData"`
	MemoryMb         pulumi.IntInput      `pulumi:"memoryMb"`
	Name             pulumi.StringInput   `pulumi:"name"`
	PlatformId       pulumi.IntInput      `pulumi:"platformId"`
	PrimaryIp        pulumi.StringInput   `pulumi:"primaryIp"`
	PrimaryIp4       pulumi.StringInput   `pulumi:"primaryIp4"`
	PrimaryIp6       pulumi.StringInput   `pulumi:"primaryIp6"`
	RoleId           pulumi.IntInput      `pulumi:"roleId"`
	SiteId           pulumi.IntInput      `pulumi:"siteId"`
	Status           pulumi.StringInput   `pulumi:"status"`
	TagIds           pulumi.IntArrayInput `pulumi:"tagIds"`
	TenantId         pulumi.IntInput      `pulumi:"tenantId"`
	Vcpus            pulumi.Float64Input  `pulumi:"vcpus"`
	VmId             pulumi.IntInput      `pulumi:"vmId"`
}

func (GetVirtualMachinesVmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualMachinesVm)(nil)).Elem()
}

func (i GetVirtualMachinesVmArgs) ToGetVirtualMachinesVmOutput() GetVirtualMachinesVmOutput {
	return i.ToGetVirtualMachinesVmOutputWithContext(context.Background())
}

func (i GetVirtualMachinesVmArgs) ToGetVirtualMachinesVmOutputWithContext(ctx context.Context) GetVirtualMachinesVmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualMachinesVmOutput)
}

// GetVirtualMachinesVmArrayInput is an input type that accepts GetVirtualMachinesVmArray and GetVirtualMachinesVmArrayOutput values.
// You can construct a concrete instance of `GetVirtualMachinesVmArrayInput` via:
//
//	GetVirtualMachinesVmArray{ GetVirtualMachinesVmArgs{...} }
type GetVirtualMachinesVmArrayInput interface {
	pulumi.Input

	ToGetVirtualMachinesVmArrayOutput() GetVirtualMachinesVmArrayOutput
	ToGetVirtualMachinesVmArrayOutputWithContext(context.Context) GetVirtualMachinesVmArrayOutput
}

type GetVirtualMachinesVmArray []GetVirtualMachinesVmInput

func (GetVirtualMachinesVmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualMachinesVm)(nil)).Elem()
}

func (i GetVirtualMachinesVmArray) ToGetVirtualMachinesVmArrayOutput() GetVirtualMachinesVmArrayOutput {
	return i.ToGetVirtualMachinesVmArrayOutputWithContext(context.Background())
}

func (i GetVirtualMachinesVmArray) ToGetVirtualMachinesVmArrayOutputWithContext(ctx context.Context) GetVirtualMachinesVmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualMachinesVmArrayOutput)
}

type GetVirtualMachinesVmOutput struct{ *pulumi.OutputState }

func (GetVirtualMachinesVmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualMachinesVm)(nil)).Elem()
}

func (o GetVirtualMachinesVmOutput) ToGetVirtualMachinesVmOutput() GetVirtualMachinesVmOutput {
	return o
}

func (o GetVirtualMachinesVmOutput) ToGetVirtualMachinesVmOutputWithContext(ctx context.Context) GetVirtualMachinesVmOutput {
	return o
}

func (o GetVirtualMachinesVmOutput) ClusterId() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) int { return v.ClusterId }).(pulumi.IntOutput)
}

func (o GetVirtualMachinesVmOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) string { return v.Comments }).(pulumi.StringOutput)
}

func (o GetVirtualMachinesVmOutput) ConfigContext() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) string { return v.ConfigContext }).(pulumi.StringOutput)
}

func (o GetVirtualMachinesVmOutput) CustomFields() pulumi.MapOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) map[string]interface{} { return v.CustomFields }).(pulumi.MapOutput)
}

func (o GetVirtualMachinesVmOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

func (o GetVirtualMachinesVmOutput) LocalContextData() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) string { return v.LocalContextData }).(pulumi.StringOutput)
}

func (o GetVirtualMachinesVmOutput) MemoryMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) int { return v.MemoryMb }).(pulumi.IntOutput)
}

func (o GetVirtualMachinesVmOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVirtualMachinesVmOutput) PlatformId() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) int { return v.PlatformId }).(pulumi.IntOutput)
}

func (o GetVirtualMachinesVmOutput) PrimaryIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) string { return v.PrimaryIp }).(pulumi.StringOutput)
}

func (o GetVirtualMachinesVmOutput) PrimaryIp4() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) string { return v.PrimaryIp4 }).(pulumi.StringOutput)
}

func (o GetVirtualMachinesVmOutput) PrimaryIp6() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) string { return v.PrimaryIp6 }).(pulumi.StringOutput)
}

func (o GetVirtualMachinesVmOutput) RoleId() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) int { return v.RoleId }).(pulumi.IntOutput)
}

func (o GetVirtualMachinesVmOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) int { return v.SiteId }).(pulumi.IntOutput)
}

func (o GetVirtualMachinesVmOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetVirtualMachinesVmOutput) TagIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) []int { return v.TagIds }).(pulumi.IntArrayOutput)
}

func (o GetVirtualMachinesVmOutput) TenantId() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) int { return v.TenantId }).(pulumi.IntOutput)
}

func (o GetVirtualMachinesVmOutput) Vcpus() pulumi.Float64Output {
	return o.ApplyT(func(v GetVirtualMachinesVm) float64 { return v.Vcpus }).(pulumi.Float64Output)
}

func (o GetVirtualMachinesVmOutput) VmId() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualMachinesVm) int { return v.VmId }).(pulumi.IntOutput)
}

type GetVirtualMachinesVmArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualMachinesVmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualMachinesVm)(nil)).Elem()
}

func (o GetVirtualMachinesVmArrayOutput) ToGetVirtualMachinesVmArrayOutput() GetVirtualMachinesVmArrayOutput {
	return o
}

func (o GetVirtualMachinesVmArrayOutput) ToGetVirtualMachinesVmArrayOutputWithContext(ctx context.Context) GetVirtualMachinesVmArrayOutput {
	return o
}

func (o GetVirtualMachinesVmArrayOutput) Index(i pulumi.IntInput) GetVirtualMachinesVmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualMachinesVm {
		return vs[0].([]GetVirtualMachinesVm)[vs[1].(int)]
	}).(GetVirtualMachinesVmOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfacesFilterInput)(nil)).Elem(), GetInterfacesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfacesFilterArrayInput)(nil)).Elem(), GetInterfacesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfacesInterfaceInput)(nil)).Elem(), GetInterfacesInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfacesInterfaceArrayInput)(nil)).Elem(), GetInterfacesInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfacesInterfaceTaggedVlanInput)(nil)).Elem(), GetInterfacesInterfaceTaggedVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfacesInterfaceTaggedVlanArrayInput)(nil)).Elem(), GetInterfacesInterfaceTaggedVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfacesInterfaceUntaggedVlanInput)(nil)).Elem(), GetInterfacesInterfaceUntaggedVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInterfacesInterfaceUntaggedVlanArrayInput)(nil)).Elem(), GetInterfacesInterfaceUntaggedVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesFilterInput)(nil)).Elem(), GetIpAddressesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesFilterArrayInput)(nil)).Elem(), GetIpAddressesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesIpAddressInput)(nil)).Elem(), GetIpAddressesIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesIpAddressArrayInput)(nil)).Elem(), GetIpAddressesIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesIpAddressTenantInput)(nil)).Elem(), GetIpAddressesIpAddressTenantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesIpAddressTenantArrayInput)(nil)).Elem(), GetIpAddressesIpAddressTenantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionFilterInput)(nil)).Elem(), GetRegionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionFilterArrayInput)(nil)).Elem(), GetRegionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantsFilterInput)(nil)).Elem(), GetTenantsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantsFilterArrayInput)(nil)).Elem(), GetTenantsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantsTenantInput)(nil)).Elem(), GetTenantsTenantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantsTenantArrayInput)(nil)).Elem(), GetTenantsTenantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantsTenantTenantGroupInput)(nil)).Elem(), GetTenantsTenantTenantGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantsTenantTenantGroupArrayInput)(nil)).Elem(), GetTenantsTenantTenantGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualMachinesFilterInput)(nil)).Elem(), GetVirtualMachinesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualMachinesFilterArrayInput)(nil)).Elem(), GetVirtualMachinesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualMachinesVmInput)(nil)).Elem(), GetVirtualMachinesVmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualMachinesVmArrayInput)(nil)).Elem(), GetVirtualMachinesVmArray{})
	pulumi.RegisterOutputType(GetInterfacesFilterOutput{})
	pulumi.RegisterOutputType(GetInterfacesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInterfacesInterfaceOutput{})
	pulumi.RegisterOutputType(GetInterfacesInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetInterfacesInterfaceTaggedVlanOutput{})
	pulumi.RegisterOutputType(GetInterfacesInterfaceTaggedVlanArrayOutput{})
	pulumi.RegisterOutputType(GetInterfacesInterfaceUntaggedVlanOutput{})
	pulumi.RegisterOutputType(GetInterfacesInterfaceUntaggedVlanArrayOutput{})
	pulumi.RegisterOutputType(GetIpAddressesFilterOutput{})
	pulumi.RegisterOutputType(GetIpAddressesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetIpAddressesIpAddressOutput{})
	pulumi.RegisterOutputType(GetIpAddressesIpAddressArrayOutput{})
	pulumi.RegisterOutputType(GetIpAddressesIpAddressTenantOutput{})
	pulumi.RegisterOutputType(GetIpAddressesIpAddressTenantArrayOutput{})
	pulumi.RegisterOutputType(GetRegionFilterOutput{})
	pulumi.RegisterOutputType(GetRegionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetTenantsFilterOutput{})
	pulumi.RegisterOutputType(GetTenantsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetTenantsTenantOutput{})
	pulumi.RegisterOutputType(GetTenantsTenantArrayOutput{})
	pulumi.RegisterOutputType(GetTenantsTenantTenantGroupOutput{})
	pulumi.RegisterOutputType(GetTenantsTenantTenantGroupArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualMachinesFilterOutput{})
	pulumi.RegisterOutputType(GetVirtualMachinesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualMachinesVmOutput{})
	pulumi.RegisterOutputType(GetVirtualMachinesVmArrayOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netbox

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "netbox:index/aggregate:Aggregate":
		r = &Aggregate{}
	case "netbox:index/availableIpAddress:AvailableIpAddress":
		r = &AvailableIpAddress{}
	case "netbox:index/availablePrefix:AvailablePrefix":
		r = &AvailablePrefix{}
	case "netbox:index/circuit:Circuit":
		r = &Circuit{}
	case "netbox:index/circuitProvider:CircuitProvider":
		r = &CircuitProvider{}
	case "netbox:index/circuitTermination:CircuitTermination":
		r = &CircuitTermination{}
	case "netbox:index/circuitType:CircuitType":
		r = &CircuitType{}
	case "netbox:index/cluster:Cluster":
		r = &Cluster{}
	case "netbox:index/clusterGroup:ClusterGroup":
		r = &ClusterGroup{}
	case "netbox:index/clusterType:ClusterType":
		r = &ClusterType{}
	case "netbox:index/customField:CustomField":
		r = &CustomField{}
	case "netbox:index/device:Device":
		r = &Device{}
	case "netbox:index/deviceRole:DeviceRole":
		r = &DeviceRole{}
	case "netbox:index/deviceType:DeviceType":
		r = &DeviceType{}
	case "netbox:index/interface:Interface":
		r = &Interface{}
	case "netbox:index/ipAddress:IpAddress":
		r = &IpAddress{}
	case "netbox:index/ipRange:IpRange":
		r = &IpRange{}
	case "netbox:index/ipamRole:IpamRole":
		r = &IpamRole{}
	case "netbox:index/manufacturer:Manufacturer":
		r = &Manufacturer{}
	case "netbox:index/platform:Platform":
		r = &Platform{}
	case "netbox:index/prefix:Prefix":
		r = &Prefix{}
	case "netbox:index/primaryIp:PrimaryIp":
		r = &PrimaryIp{}
	case "netbox:index/region:Region":
		r = &Region{}
	case "netbox:index/rir:Rir":
		r = &Rir{}
	case "netbox:index/service:Service":
		r = &Service{}
	case "netbox:index/site:Site":
		r = &Site{}
	case "netbox:index/tag:Tag":
		r = &Tag{}
	case "netbox:index/tenant:Tenant":
		r = &Tenant{}
	case "netbox:index/tenantGroup:TenantGroup":
		r = &TenantGroup{}
	case "netbox:index/token:Token":
		r = &Token{}
	case "netbox:index/user:User":
		r = &User{}
	case "netbox:index/virtualMachine:VirtualMachine":
		r = &VirtualMachine{}
	case "netbox:index/vlan:Vlan":
		r = &Vlan{}
	case "netbox:index/vrf:Vrf":
		r = &Vrf{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:netbox" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, _ := PkgVersion()
	pulumi.RegisterResourceModule(
		"netbox",
		"index/aggregate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/availableIpAddress",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/availablePrefix",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/circuit",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/circuitProvider",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/circuitTermination",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/circuitType",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/cluster",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/clusterGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/clusterType",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/customField",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/device",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/deviceRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/deviceType",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/interface",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/ipAddress",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/ipRange",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/ipamRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/manufacturer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/platform",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/prefix",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/primaryIp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/region",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/rir",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/service",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/site",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/tag",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/tenant",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/tenantGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/token",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/user",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/virtualMachine",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/vlan",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"netbox",
		"index/vrf",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"netbox",
		&pkg{version},
	)
}

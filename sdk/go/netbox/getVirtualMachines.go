// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netbox

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/hbjydev/pulumi-netbox/sdk/go/netbox"
//	"github.com/pulumi/pulumi-netbox/sdk/go/netbox"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			vmwCluster01, err := netbox.LookupCluster(ctx, &GetClusterArgs{
//				Name: "vmw-cluster-01",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = netbox.GetVirtualMachines(ctx, &GetVirtualMachinesArgs{
//				NameRegex: pulumi.StringRef("myvm-1"),
//				Filters: []GetVirtualMachinesFilter{
//					GetVirtualMachinesFilter{
//						Name:  "cluster_id",
//						Value: vmwCluster01.Id,
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVirtualMachines(ctx *pulumi.Context, args *GetVirtualMachinesArgs, opts ...pulumi.InvokeOption) (*GetVirtualMachinesResult, error) {
	var rv GetVirtualMachinesResult
	err := ctx.Invoke("netbox:index/getVirtualMachines:getVirtualMachines", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualMachines.
type GetVirtualMachinesArgs struct {
	Filters   []GetVirtualMachinesFilter `pulumi:"filters"`
	Limit     *int                       `pulumi:"limit"`
	NameRegex *string                    `pulumi:"nameRegex"`
}

// A collection of values returned by getVirtualMachines.
type GetVirtualMachinesResult struct {
	Filters []GetVirtualMachinesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id        string                 `pulumi:"id"`
	Limit     *int                   `pulumi:"limit"`
	NameRegex *string                `pulumi:"nameRegex"`
	Vms       []GetVirtualMachinesVm `pulumi:"vms"`
}

func GetVirtualMachinesOutput(ctx *pulumi.Context, args GetVirtualMachinesOutputArgs, opts ...pulumi.InvokeOption) GetVirtualMachinesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVirtualMachinesResult, error) {
			args := v.(GetVirtualMachinesArgs)
			r, err := GetVirtualMachines(ctx, &args, opts...)
			var s GetVirtualMachinesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVirtualMachinesResultOutput)
}

// A collection of arguments for invoking getVirtualMachines.
type GetVirtualMachinesOutputArgs struct {
	Filters   GetVirtualMachinesFilterArrayInput `pulumi:"filters"`
	Limit     pulumi.IntPtrInput                 `pulumi:"limit"`
	NameRegex pulumi.StringPtrInput              `pulumi:"nameRegex"`
}

func (GetVirtualMachinesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualMachinesArgs)(nil)).Elem()
}

// A collection of values returned by getVirtualMachines.
type GetVirtualMachinesResultOutput struct{ *pulumi.OutputState }

func (GetVirtualMachinesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualMachinesResult)(nil)).Elem()
}

func (o GetVirtualMachinesResultOutput) ToGetVirtualMachinesResultOutput() GetVirtualMachinesResultOutput {
	return o
}

func (o GetVirtualMachinesResultOutput) ToGetVirtualMachinesResultOutputWithContext(ctx context.Context) GetVirtualMachinesResultOutput {
	return o
}

func (o GetVirtualMachinesResultOutput) Filters() GetVirtualMachinesFilterArrayOutput {
	return o.ApplyT(func(v GetVirtualMachinesResult) []GetVirtualMachinesFilter { return v.Filters }).(GetVirtualMachinesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVirtualMachinesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachinesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVirtualMachinesResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetVirtualMachinesResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetVirtualMachinesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualMachinesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetVirtualMachinesResultOutput) Vms() GetVirtualMachinesVmArrayOutput {
	return o.ApplyT(func(v GetVirtualMachinesResult) []GetVirtualMachinesVm { return v.Vms }).(GetVirtualMachinesVmArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVirtualMachinesResultOutput{})
}

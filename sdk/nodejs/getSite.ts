// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as netbox from "@pulumi/netbox";
 *
 * const getByName = pulumi.output(netbox.getSite({
 *     name: "Example Site 1",
 * }));
 * const getBySlug = pulumi.output(netbox.getSite({
 *     slug: "example-site-1",
 * }));
 * ```
 */
export function getSite(args?: GetSiteArgs, opts?: pulumi.InvokeOptions): Promise<GetSiteResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("netbox:index/getSite:getSite", {
        "name": args.name,
        "slug": args.slug,
    }, opts);
}

/**
 * A collection of arguments for invoking getSite.
 */
export interface GetSiteArgs {
    name?: string;
    slug?: string;
}

/**
 * A collection of values returned by getSite.
 */
export interface GetSiteResult {
    readonly asn: number;
    readonly comments: string;
    readonly description: string;
    readonly groupId: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly regionId: number;
    readonly siteId: number;
    readonly slug?: string;
    readonly status: string;
    readonly tenantId: number;
    readonly timeZone: string;
}

export function getSiteOutput(args?: GetSiteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSiteResult> {
    return pulumi.output(args).apply(a => getSite(a, opts))
}

/**
 * A collection of arguments for invoking getSite.
 */
export interface GetSiteOutputArgs {
    name?: pulumi.Input<string>;
    slug?: pulumi.Input<string>;
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("netbox");

/**
 * Flag to set whether to allow https with invalid certificates
 */
export declare const allowInsecureHttps: boolean | undefined;
Object.defineProperty(exports, "allowInsecureHttps", {
    get() {
        return __config.getObject<boolean>("allowInsecureHttps");
    },
    enumerable: true,
});

/**
 * Netbox API authentication token
 */
export declare const apiToken: string | undefined;
Object.defineProperty(exports, "apiToken", {
    get() {
        return __config.get("apiToken") ?? utilities.getEnv("NETBOX_API_TOKEN");
    },
    enumerable: true,
});

/**
 * Set these header on all requests to Netbox
 */
export declare const headers: {[key: string]: any} | undefined;
Object.defineProperty(exports, "headers", {
    get() {
        return __config.getObject<{[key: string]: any}>("headers");
    },
    enumerable: true,
});

/**
 * Location of Netbox server including scheme and optional port
 */
export declare const serverUrl: string | undefined;
Object.defineProperty(exports, "serverUrl", {
    get() {
        return __config.get("serverUrl") ?? utilities.getEnv("NETBOX_SERVER_URL");
    },
    enumerable: true,
});

/**
 * If true, do not try to determine the running Netbox version at provider startup. Disables warnings about possibly
 * unsupported Netbox version. Also useful for local testing on terraform plans.
 */
export declare const skipVersionCheck: boolean | undefined;
Object.defineProperty(exports, "skipVersionCheck", {
    get() {
        return __config.getObject<boolean>("skipVersionCheck");
    },
    enumerable: true,
});


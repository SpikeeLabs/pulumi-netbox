// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./aggregate";
export * from "./availableIpAddress";
export * from "./availablePrefix";
export * from "./circuit";
export * from "./circuitProvider";
export * from "./circuitTermination";
export * from "./circuitType";
export * from "./cluster";
export * from "./clusterGroup";
export * from "./clusterType";
export * from "./customField";
export * from "./device";
export * from "./deviceRole";
export * from "./deviceType";
export * from "./getCluster";
export * from "./getClusterGroup";
export * from "./getClusterType";
export * from "./getDeviceRole";
export * from "./getDeviceType";
export * from "./getInterfaces";
export * from "./getIpAddresses";
export * from "./getIpRange";
export * from "./getPlatform";
export * from "./getPrefix";
export * from "./getRegion";
export * from "./getSite";
export * from "./getTag";
export * from "./getTenant";
export * from "./getTenantGroup";
export * from "./getTenants";
export * from "./getVirtualMachines";
export * from "./getVlan";
export * from "./getVrf";
export * from "./interface";
export * from "./ipAddress";
export * from "./ipRange";
export * from "./ipamRole";
export * from "./manufacturer";
export * from "./platform";
export * from "./prefix";
export * from "./primaryIp";
export * from "./provider";
export * from "./region";
export * from "./rir";
export * from "./service";
export * from "./site";
export * from "./tag";
export * from "./tenant";
export * from "./tenantGroup";
export * from "./token";
export * from "./user";
export * from "./virtualMachine";
export * from "./vlan";
export * from "./vrf";

// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

// Import resources to register:
import { Aggregate } from "./aggregate";
import { AvailableIpAddress } from "./availableIpAddress";
import { AvailablePrefix } from "./availablePrefix";
import { Circuit } from "./circuit";
import { CircuitProvider } from "./circuitProvider";
import { CircuitTermination } from "./circuitTermination";
import { CircuitType } from "./circuitType";
import { Cluster } from "./cluster";
import { ClusterGroup } from "./clusterGroup";
import { ClusterType } from "./clusterType";
import { CustomField } from "./customField";
import { Device } from "./device";
import { DeviceRole } from "./deviceRole";
import { DeviceType } from "./deviceType";
import { Interface } from "./interface";
import { IpAddress } from "./ipAddress";
import { IpRange } from "./ipRange";
import { IpamRole } from "./ipamRole";
import { Manufacturer } from "./manufacturer";
import { Platform } from "./platform";
import { Prefix } from "./prefix";
import { PrimaryIp } from "./primaryIp";
import { Region } from "./region";
import { Rir } from "./rir";
import { Service } from "./service";
import { Site } from "./site";
import { Tag } from "./tag";
import { Tenant } from "./tenant";
import { TenantGroup } from "./tenantGroup";
import { Token } from "./token";
import { User } from "./user";
import { VirtualMachine } from "./virtualMachine";
import { Vlan } from "./vlan";
import { Vrf } from "./vrf";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "netbox:index/aggregate:Aggregate":
                return new Aggregate(name, <any>undefined, { urn })
            case "netbox:index/availableIpAddress:AvailableIpAddress":
                return new AvailableIpAddress(name, <any>undefined, { urn })
            case "netbox:index/availablePrefix:AvailablePrefix":
                return new AvailablePrefix(name, <any>undefined, { urn })
            case "netbox:index/circuit:Circuit":
                return new Circuit(name, <any>undefined, { urn })
            case "netbox:index/circuitProvider:CircuitProvider":
                return new CircuitProvider(name, <any>undefined, { urn })
            case "netbox:index/circuitTermination:CircuitTermination":
                return new CircuitTermination(name, <any>undefined, { urn })
            case "netbox:index/circuitType:CircuitType":
                return new CircuitType(name, <any>undefined, { urn })
            case "netbox:index/cluster:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "netbox:index/clusterGroup:ClusterGroup":
                return new ClusterGroup(name, <any>undefined, { urn })
            case "netbox:index/clusterType:ClusterType":
                return new ClusterType(name, <any>undefined, { urn })
            case "netbox:index/customField:CustomField":
                return new CustomField(name, <any>undefined, { urn })
            case "netbox:index/device:Device":
                return new Device(name, <any>undefined, { urn })
            case "netbox:index/deviceRole:DeviceRole":
                return new DeviceRole(name, <any>undefined, { urn })
            case "netbox:index/deviceType:DeviceType":
                return new DeviceType(name, <any>undefined, { urn })
            case "netbox:index/interface:Interface":
                return new Interface(name, <any>undefined, { urn })
            case "netbox:index/ipAddress:IpAddress":
                return new IpAddress(name, <any>undefined, { urn })
            case "netbox:index/ipRange:IpRange":
                return new IpRange(name, <any>undefined, { urn })
            case "netbox:index/ipamRole:IpamRole":
                return new IpamRole(name, <any>undefined, { urn })
            case "netbox:index/manufacturer:Manufacturer":
                return new Manufacturer(name, <any>undefined, { urn })
            case "netbox:index/platform:Platform":
                return new Platform(name, <any>undefined, { urn })
            case "netbox:index/prefix:Prefix":
                return new Prefix(name, <any>undefined, { urn })
            case "netbox:index/primaryIp:PrimaryIp":
                return new PrimaryIp(name, <any>undefined, { urn })
            case "netbox:index/region:Region":
                return new Region(name, <any>undefined, { urn })
            case "netbox:index/rir:Rir":
                return new Rir(name, <any>undefined, { urn })
            case "netbox:index/service:Service":
                return new Service(name, <any>undefined, { urn })
            case "netbox:index/site:Site":
                return new Site(name, <any>undefined, { urn })
            case "netbox:index/tag:Tag":
                return new Tag(name, <any>undefined, { urn })
            case "netbox:index/tenant:Tenant":
                return new Tenant(name, <any>undefined, { urn })
            case "netbox:index/tenantGroup:TenantGroup":
                return new TenantGroup(name, <any>undefined, { urn })
            case "netbox:index/token:Token":
                return new Token(name, <any>undefined, { urn })
            case "netbox:index/user:User":
                return new User(name, <any>undefined, { urn })
            case "netbox:index/virtualMachine:VirtualMachine":
                return new VirtualMachine(name, <any>undefined, { urn })
            case "netbox:index/vlan:Vlan":
                return new Vlan(name, <any>undefined, { urn })
            case "netbox:index/vrf:Vrf":
                return new Vrf(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("netbox", "index/aggregate", _module)
pulumi.runtime.registerResourceModule("netbox", "index/availableIpAddress", _module)
pulumi.runtime.registerResourceModule("netbox", "index/availablePrefix", _module)
pulumi.runtime.registerResourceModule("netbox", "index/circuit", _module)
pulumi.runtime.registerResourceModule("netbox", "index/circuitProvider", _module)
pulumi.runtime.registerResourceModule("netbox", "index/circuitTermination", _module)
pulumi.runtime.registerResourceModule("netbox", "index/circuitType", _module)
pulumi.runtime.registerResourceModule("netbox", "index/cluster", _module)
pulumi.runtime.registerResourceModule("netbox", "index/clusterGroup", _module)
pulumi.runtime.registerResourceModule("netbox", "index/clusterType", _module)
pulumi.runtime.registerResourceModule("netbox", "index/customField", _module)
pulumi.runtime.registerResourceModule("netbox", "index/device", _module)
pulumi.runtime.registerResourceModule("netbox", "index/deviceRole", _module)
pulumi.runtime.registerResourceModule("netbox", "index/deviceType", _module)
pulumi.runtime.registerResourceModule("netbox", "index/interface", _module)
pulumi.runtime.registerResourceModule("netbox", "index/ipAddress", _module)
pulumi.runtime.registerResourceModule("netbox", "index/ipRange", _module)
pulumi.runtime.registerResourceModule("netbox", "index/ipamRole", _module)
pulumi.runtime.registerResourceModule("netbox", "index/manufacturer", _module)
pulumi.runtime.registerResourceModule("netbox", "index/platform", _module)
pulumi.runtime.registerResourceModule("netbox", "index/prefix", _module)
pulumi.runtime.registerResourceModule("netbox", "index/primaryIp", _module)
pulumi.runtime.registerResourceModule("netbox", "index/region", _module)
pulumi.runtime.registerResourceModule("netbox", "index/rir", _module)
pulumi.runtime.registerResourceModule("netbox", "index/service", _module)
pulumi.runtime.registerResourceModule("netbox", "index/site", _module)
pulumi.runtime.registerResourceModule("netbox", "index/tag", _module)
pulumi.runtime.registerResourceModule("netbox", "index/tenant", _module)
pulumi.runtime.registerResourceModule("netbox", "index/tenantGroup", _module)
pulumi.runtime.registerResourceModule("netbox", "index/token", _module)
pulumi.runtime.registerResourceModule("netbox", "index/user", _module)
pulumi.runtime.registerResourceModule("netbox", "index/virtualMachine", _module)
pulumi.runtime.registerResourceModule("netbox", "index/vlan", _module)
pulumi.runtime.registerResourceModule("netbox", "index/vrf", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("netbox", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:netbox") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});

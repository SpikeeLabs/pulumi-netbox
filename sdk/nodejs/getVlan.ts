// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as netbox from "@pulumi/netbox";
 *
 * // Get VLAN by name
 * const vlan1 = pulumi.output(netbox.getVlan({
 *     name: "vlan-1",
 * }));
 * // Get VLAN by VLAN ID
 * const vlan2 = pulumi.output(netbox.getVlan({
 *     vid: 1234,
 * }));
 * ```
 */
export function getVlan(args?: GetVlanArgs, opts?: pulumi.InvokeOptions): Promise<GetVlanResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("netbox:index/getVlan:getVlan", {
        "name": args.name,
        "vid": args.vid,
    }, opts);
}

/**
 * A collection of arguments for invoking getVlan.
 */
export interface GetVlanArgs {
    name?: string;
    vid?: number;
}

/**
 * A collection of values returned by getVlan.
 */
export interface GetVlanResult {
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly role: number;
    readonly site: number;
    readonly status: string;
    readonly tenant: number;
    readonly vid?: number;
}

export function getVlanOutput(args?: GetVlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVlanResult> {
    return pulumi.output(args).apply(a => getVlan(a, opts))
}

/**
 * A collection of arguments for invoking getVlan.
 */
export interface GetVlanOutputArgs {
    name?: pulumi.Input<string>;
    vid?: pulumi.Input<number>;
}

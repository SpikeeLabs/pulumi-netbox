// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace HBJYDev.Netbox
{
    public static class GetInterfaces
    {
        public static Task<GetInterfacesResult> InvokeAsync(GetInterfacesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInterfacesResult>("netbox:index/getInterfaces:getInterfaces", args ?? new GetInterfacesArgs(), options.WithDefaults());

        public static Output<GetInterfacesResult> Invoke(GetInterfacesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetInterfacesResult>("netbox:index/getInterfaces:getInterfaces", args ?? new GetInterfacesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInterfacesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetInterfacesFilterArgs>? _filters;
        public List<Inputs.GetInterfacesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInterfacesFilterArgs>());
            set => _filters = value;
        }

        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        public GetInterfacesArgs()
        {
        }
        public static new GetInterfacesArgs Empty => new GetInterfacesArgs();
    }

    public sealed class GetInterfacesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetInterfacesFilterInputArgs>? _filters;
        public InputList<Inputs.GetInterfacesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInterfacesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        public GetInterfacesInvokeArgs()
        {
        }
        public static new GetInterfacesInvokeArgs Empty => new GetInterfacesInvokeArgs();
    }


    [OutputType]
    public sealed class GetInterfacesResult
    {
        public readonly ImmutableArray<Outputs.GetInterfacesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetInterfacesInterfaceResult> Interfaces;
        public readonly string? NameRegex;

        [OutputConstructor]
        private GetInterfacesResult(
            ImmutableArray<Outputs.GetInterfacesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetInterfacesInterfaceResult> interfaces,

            string? nameRegex)
        {
            Filters = filters;
            Id = id;
            Interfaces = interfaces;
            NameRegex = nameRegex;
        }
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace HBJYDev.Netbox
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Netbox = HBJYDev.Netbox;
    /// using Netbox = Pulumi.Netbox;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testPrefix = Netbox.GetPrefix.Invoke(new()
    ///     {
    ///         Cidr = "10.0.0.0/24",
    ///     });
    /// 
    ///     var testAvailablePrefix = new Netbox.AvailablePrefix("testAvailablePrefix", new()
    ///     {
    ///         ParentPrefixId = testPrefix.Apply(getPrefixResult =&gt; getPrefixResult.Id),
    ///         PrefixLength = 25,
    ///         Status = "active",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [NetboxResourceType("netbox:index/availablePrefix:AvailablePrefix")]
    public partial class AvailablePrefix : global::Pulumi.CustomResource
    {
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("isPool")]
        public Output<bool?> IsPool { get; private set; } = null!;

        [Output("markUtilized")]
        public Output<bool?> MarkUtilized { get; private set; } = null!;

        [Output("parentPrefixId")]
        public Output<int> ParentPrefixId { get; private set; } = null!;

        [Output("prefix")]
        public Output<string> Prefix { get; private set; } = null!;

        [Output("prefixLength")]
        public Output<int> PrefixLength { get; private set; } = null!;

        [Output("roleId")]
        public Output<int?> RoleId { get; private set; } = null!;

        [Output("siteId")]
        public Output<int?> SiteId { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        [Output("tenantId")]
        public Output<int?> TenantId { get; private set; } = null!;

        [Output("vlanId")]
        public Output<int?> VlanId { get; private set; } = null!;

        [Output("vrfId")]
        public Output<int?> VrfId { get; private set; } = null!;


        /// <summary>
        /// Create a AvailablePrefix resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AvailablePrefix(string name, AvailablePrefixArgs args, CustomResourceOptions? options = null)
            : base("netbox:index/availablePrefix:AvailablePrefix", name, args ?? new AvailablePrefixArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AvailablePrefix(string name, Input<string> id, AvailablePrefixState? state = null, CustomResourceOptions? options = null)
            : base("netbox:index/availablePrefix:AvailablePrefix", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AvailablePrefix resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AvailablePrefix Get(string name, Input<string> id, AvailablePrefixState? state = null, CustomResourceOptions? options = null)
        {
            return new AvailablePrefix(name, id, state, options);
        }
    }

    public sealed class AvailablePrefixArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("isPool")]
        public Input<bool>? IsPool { get; set; }

        [Input("markUtilized")]
        public Input<bool>? MarkUtilized { get; set; }

        [Input("parentPrefixId", required: true)]
        public Input<int> ParentPrefixId { get; set; } = null!;

        [Input("prefixLength", required: true)]
        public Input<int> PrefixLength { get; set; } = null!;

        [Input("roleId")]
        public Input<int>? RoleId { get; set; }

        [Input("siteId")]
        public Input<int>? SiteId { get; set; }

        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("tenantId")]
        public Input<int>? TenantId { get; set; }

        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        [Input("vrfId")]
        public Input<int>? VrfId { get; set; }

        public AvailablePrefixArgs()
        {
        }
        public static new AvailablePrefixArgs Empty => new AvailablePrefixArgs();
    }

    public sealed class AvailablePrefixState : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("isPool")]
        public Input<bool>? IsPool { get; set; }

        [Input("markUtilized")]
        public Input<bool>? MarkUtilized { get; set; }

        [Input("parentPrefixId")]
        public Input<int>? ParentPrefixId { get; set; }

        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        [Input("prefixLength")]
        public Input<int>? PrefixLength { get; set; }

        [Input("roleId")]
        public Input<int>? RoleId { get; set; }

        [Input("siteId")]
        public Input<int>? SiteId { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("tenantId")]
        public Input<int>? TenantId { get; set; }

        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        [Input("vrfId")]
        public Input<int>? VrfId { get; set; }

        public AvailablePrefixState()
        {
        }
        public static new AvailablePrefixState Empty => new AvailablePrefixState();
    }
}
